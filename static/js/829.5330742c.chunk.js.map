{"version":3,"file":"static/js/829.5330742c.chunk.js","mappings":"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","sources":["selectors/users-selectors.ts","webpack:///./src/components/Users/User/User.module.scss?c19e","components/Users/User/User.tsx","webpack:///./src/components/Users/Search/Search.module.scss?15f3","components/Users/Search/Search.tsx","components/common/Pagination/Pagination.tsx","webpack:///./src/components/Users/Users.module.scss?b204","components/Users/Users.tsx","hooks/useTypedSelector.ts"],"sourcesContent":["// import { createSelector } from 'reselect' // for difficult situation for example filter\r\nimport { TUser } from '../types/types'\r\nimport { AppStateType } from '../redux/redux-store'\r\n\r\n// users\r\nexport const getUsers = (state: AppStateType): Array<TUser> => state.usersPage.users\r\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize\r\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage\r\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isFetching\r\nexport const getFollowingInProgress = (state: AppStateType) => state.usersPage.followingInProgress\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__Lrek9\",\"name\":\"User_name__t4uOK\",\"desc\":\"User_desc__HyjJk\",\"photo\":\"User_photo__DcfJ7\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport profileImage from '../../../assets/img/blank-profile-picture.webp'\r\nimport s from './User.module.scss'\r\n\r\ntype PropsType = {\r\n\tselfID: number\r\n\tuserID: number\r\n\tsmallPhoto: null | string\r\n\tname: string\r\n\tfollowed: boolean\r\n\tstatus: string\r\n\tfollowingInProgress: Array<number>\r\n\ttoggleFollowingInProgress: (isFetching: boolean, userID: number) => void\r\n\tchangeFollow: (doFollow: boolean, userID: number) => void\r\n}\r\n\r\nconst User = (props: PropsType) => {\r\n\tconst buttonBlock = () => {\r\n\t\tif (props.userID === props.selfID) {\r\n\t\t\treturn <button disabled>you</button>\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tdisabled={props.followingInProgress.some(id => id === props.userID)}\r\n\t\t\t\tonClick={() => props.changeFollow(!props.followed, props.userID)}>\r\n\t\t\t\t{props.followed ? 'unfollow' : 'follow'}\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.user}>\r\n\t\t\t<div className={s.name}>\r\n\t\t\t\t<div className={s.photo}>\r\n\t\t\t\t\t<NavLink to={`/profile/${props.userID}`}>\r\n\t\t\t\t\t\t<img src={props.smallPhoto != null ? props.smallPhoto : profileImage} alt='' />\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<h3>{props.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{buttonBlock()}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.desc}>{props.status}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default User\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Search_form__7nD9N\",\"search\":\"Search_search__jtXau\",\"filter\":\"Search_filter__1BZ8i\",\"btn\":\"Search_btn__9YyMW\"};","import React from 'react'\r\nimport { URLSearchParamsInit } from 'react-router-dom'\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\n\r\nimport s from './Search.module.scss'\r\nimport { TUsersSearchParams } from '../../../types/users-types'\r\n\r\ntype TFormValues = {\r\n\tsearch: string\r\n\tfriend: string\r\n}\r\ntype TProps = {\r\n\tsearchTerm: string\r\n\tsearchFriend: string\r\n\tsetSearchParams: (\r\n\t\tnextInit: URLSearchParamsInit,\r\n\t\tnavigateOptions?:\r\n\t\t\t| {\r\n\t\t\t\t\treplace?: boolean | undefined\r\n\t\t\t\t\tstate?: any\r\n\t\t\t  }\r\n\t\t\t| undefined\r\n\t) => void\r\n\tonSearchUsers: (search: string, friend: null | boolean) => void\r\n}\r\n\r\nconst Search = (props: TProps) => {\r\n\tconst { handleSubmit, register } = useForm<TFormValues>({\r\n\t\tdefaultValues: {\r\n\t\t\tsearch: props.searchTerm,\r\n\t\t\tfriend: props.searchFriend === 'true' ? 'only' : props.searchFriend === 'false' ? 'not' : 'all'\r\n\t\t}\r\n\t})\r\n\r\n\tconst onSubmit: SubmitHandler<TFormValues> = data => {\r\n\t\tconst { search, friend } = data\r\n\t\tconst resParams: TUsersSearchParams = {\r\n\t\t\tterm: '',\r\n\t\t\tfriend: '',\r\n\t\t\tpage: ''\r\n\t\t}\r\n\r\n\t\tlet resultFriend: null | boolean = null\r\n\t\tif (friend === 'only') resultFriend = true\r\n\t\telse if (friend === 'not') resultFriend = false\r\n\t\telse resultFriend = null\r\n\r\n\t\tif (resultFriend !== null) {\r\n\t\t\tresParams.friend = resultFriend.toString()\r\n\t\t}\r\n\t\tif (search) resParams.term = search\r\n\r\n\t\tprops.setSearchParams(resParams)\r\n\t\tprops.onSearchUsers(search, resultFriend)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)} className={s.form} placeholder='Search...'>\r\n\t\t\t<input {...register('search')} type='text' className={s.search} placeholder='name...' />\r\n\t\t\t<div className={s.filter}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<input {...register('friend')} type='radio' name='friend' value='all' /> <span>All</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<input {...register('friend')} type='radio' name='friend' value='only' /> <span>Friends</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<input {...register('friend')} type='radio' name='friend' value='not' /> <span>Strangers</span>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t<button type='submit' className={s.btn}>\r\n\t\t\t\tsearch\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport './Pagination.scss'\r\n\r\ntype PropsType = {\r\n\tonChangePage: (page: number) => void\r\n\ttotalItemsCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n}\r\n\r\nconst Pagination = ({ onChangePage, totalItemsCount, pageSize, currentPage }: PropsType) => {\r\n\t// pages of users\r\n\tconst pagesCount: number = Math.ceil(totalItemsCount / pageSize)\r\n\r\n\tconst pages: Array<number> = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\t// deleting unnecessary\r\n\tconst pagesBlock = pages.map((page: number) => {\r\n\t\ttype PageElementPropsType = { text: string }\r\n\t\tconst PageElement = ({ text }: PageElementPropsType) => (\r\n\t\t\t<span\r\n\t\t\t\ttitle='page' // for unit test\r\n\t\t\t\tclassName={`navItem ${currentPage === page && 'selectedPage'}`}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (currentPage !== page) onChangePage(page)\r\n\t\t\t\t}}>\r\n\t\t\t\t{text}\r\n\t\t\t</span>\r\n\t\t)\r\n\r\n\t\tif (page === pages[0] || page === pages[pages.length - 1]) {\r\n\t\t\t// if first page/last page\r\n\t\t\tif (pages[0] < currentPage - 3) {\r\n\t\t\t\treturn <PageElement key={page} text={`${page} ...`} />\r\n\t\t\t} else if (pages[pages.length - 1] > currentPage + 3) {\r\n\t\t\t\treturn <PageElement key={page} text={`... ${page}`} />\r\n\t\t\t} else {\r\n\t\t\t\treturn <PageElement key={page} text={`${page}`} />\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\tcurrentPage === page ||\r\n\t\t\tcurrentPage === page - 1 ||\r\n\t\t\tcurrentPage === page - 2 ||\r\n\t\t\tcurrentPage === page - 3 ||\r\n\t\t\tcurrentPage === page + 1 ||\r\n\t\t\tcurrentPage === page + 2 ||\r\n\t\t\tcurrentPage === page + 3\r\n\t\t) {\r\n\t\t\treturn <PageElement key={page} text={`${page}`} /> // if 0/-1/-2/-3/+1/+2/+3 page\r\n\t\t}\r\n\t})\r\n\r\n\treturn <>{pagesBlock}</>\r\n}\r\n\r\nexport default Pagination\r\n","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__VwipU\",\"nav\":\"Users_nav__tcKg2\",\"navItem\":\"Users_navItem__fPa-h\",\"selectedPage\":\"Users_selectedPage__MZIoU\"};","import React, { useEffect } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAuthNavigate } from '../../hooks/useAuthNavigate'\r\n// actions thunks\r\nimport { actions, requestUsers, changeFollow as changeFollowThunk } from '../../redux/usersReducer'\r\n// selectors\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\nimport { getDataID } from '../../selectors/auth-selectors'\r\nimport { getTotalUsersCount, getCurrentPage, getFollowingInProgress, getPageSize, getIsFetching, getUsers } from '../../selectors/users-selectors'\r\n// types\r\nimport { AppDispatchType } from '../../redux/redux-store'\r\n// components\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport User from './User/User'\r\nimport Search from './Search/Search'\r\nimport Pagination from '../common/Pagination/Pagination'\r\n// styles\r\nimport s from './Users.module.scss'\r\nimport { TUsersSearchParams } from '../../types/users-types'\r\n\r\nconst Users = () => {\r\n\t// search params\r\n\tconst [searchParams, setSearchParams] = useSearchParams()\r\n\tconst searchPage = searchParams.get('page')\r\n\tconst searchTerm = searchParams.get('term') || ''\r\n\tconst searchFriend = searchParams.get('friend') || ''\r\n\r\n\tlet resultFriend: null | boolean = null\r\n\tif (searchFriend === 'true') resultFriend = true\r\n\telse if (searchFriend === 'false') resultFriend = false\r\n\telse resultFriend = null\r\n\r\n\t// selectors\r\n\tconst selfID = useTypedSelector(getDataID) as number,\r\n\t\ttotalUsersCount = useTypedSelector(getTotalUsersCount),\r\n\t\tcurrentPage = useTypedSelector(getCurrentPage),\r\n\t\tpageSize = useTypedSelector(getPageSize),\r\n\t\tfollowingInProgress = useTypedSelector(getFollowingInProgress),\r\n\t\tusers = useTypedSelector(getUsers),\r\n\t\tisFetching = useTypedSelector(getIsFetching)\r\n\r\n\t// dispatches\r\n\tconst dispatch = useDispatch<AppDispatchType>()\r\n\r\n\tconst toggleFollowingInProgress = (isFetching: boolean, userID: number) => {\r\n\t\tdispatch(actions.toggleFollowingInProgress(isFetching, userID))\r\n\t}\r\n\tconst changeFollow = (doFollow: boolean, userID: number) => {\r\n\t\tdispatch(changeFollowThunk(doFollow, userID))\r\n\t}\r\n\r\n\t// component did mount\r\n\tuseEffect(() => {\r\n\t\tlet page: number = currentPage\r\n\t\tif (page !== (searchPage !== null ? searchPage : page)) {\r\n\t\t\tdispatch(actions.setCurrentPage(Number(searchPage)))\r\n\t\t\tpage = Number(searchPage)\r\n\t\t}\r\n\r\n\t\tconst resParams: TUsersSearchParams = {\r\n\t\t\tpage: String(page)\r\n\t\t}\r\n\t\tif (searchTerm !== '') resParams.term = searchTerm\r\n\t\tif (resultFriend !== null) resParams.friend = String(resultFriend)\r\n\r\n\t\tsetSearchParams(resParams)\r\n\t\tdispatch(requestUsers(currentPage, pageSize, true, searchTerm, resultFriend))\r\n\t}, [])\r\n\r\n\t// functions\r\n\tconst onChangePage = (page: number) => {\r\n\t\tdispatch(actions.setCurrentPage(page))\r\n\r\n\t\tconst resParams: TUsersSearchParams = {\r\n\t\t\tpage: String(page)\r\n\t\t}\r\n\t\tif (searchTerm !== '') resParams.term = searchTerm\r\n\t\tif (resultFriend !== null) resParams.friend = String(resultFriend)\r\n\r\n\t\tsetSearchParams(resParams)\r\n\t\tdispatch(requestUsers(page, pageSize, false, searchTerm, resultFriend))\r\n\t}\r\n\r\n\tconst onSearchUsers = (search: string, friend: null | boolean) => {\r\n\t\tconst resParams: TUsersSearchParams = {\r\n\t\t\tpage: '1'\r\n\t\t}\r\n\t\tif (searchTerm !== '') resParams.term = searchTerm\r\n\t\tif (resultFriend !== null) resParams.friend = String(resultFriend)\r\n\r\n\t\tdispatch(actions.setCurrentPage(1))\r\n\t\tsetSearchParams(resParams)\r\n\t\tdispatch(requestUsers(1, pageSize, true, search, friend))\r\n\t}\r\n\r\n\t// block\r\n\tconst usersBlock = users.map((user: any) => (\r\n\t\t<User\r\n\t\t\tkey={user.id}\r\n\t\t\tselfID={selfID}\r\n\t\t\tuserID={user.id}\r\n\t\t\tsmallPhoto={user.photos.small}\r\n\t\t\tname={user.name}\r\n\t\t\tfollowed={user.followed}\r\n\t\t\tstatus={user.status}\r\n\t\t\tfollowingInProgress={followingInProgress}\r\n\t\t\tchangeFollow={changeFollow}\r\n\t\t\ttoggleFollowingInProgress={toggleFollowingInProgress}\r\n\t\t/>\r\n\t))\r\n\r\n\t// render\r\n\tif (isFetching) return <Preloader />\r\n\treturn (\r\n\t\t<section className={s.users}>\r\n\t\t\t<Search onSearchUsers={onSearchUsers} setSearchParams={setSearchParams} searchFriend={searchFriend} searchTerm={searchTerm} />\r\n\t\t\t<div className={s.nav}>\r\n\t\t\t\t<Pagination onChangePage={onChangePage} totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} />\r\n\t\t\t</div>\r\n\t\t\t<div>{usersBlock}</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Users\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../redux/redux-store'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<AppStateType> = useSelector\r\n"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","props","className","s","to","userID","src","smallPhoto","profileImage","alt","name","selfID","disabled","some","id","onClick","changeFollow","followed","status","useForm","defaultValues","search","searchTerm","friend","searchFriend","handleSubmit","register","onSubmit","data","resParams","term","page","resultFriend","toString","setSearchParams","onSearchUsers","placeholder","type","value","onChangePage","totalItemsCount","pagesCount","Math","ceil","pages","i","push","pagesBlock","map","PageElement","text","title","length","useSearchParams","searchParams","searchPage","get","useTypedSelector","getDataID","dispatch","useDispatch","toggleFollowingInProgress","actions","doFollow","changeFollowThunk","useEffect","Number","String","requestUsers","usersBlock","user","photos","small","Preloader","useSelector"],"sourceRoot":""}